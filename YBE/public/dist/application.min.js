"use strict";var ApplicationConfiguration=function(){var applicationModuleName="YBE",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","google-maps","angulartics","angulartics.google.analytics"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("lupus-widgets"),ApplicationConfiguration.registerModule("pages"),ApplicationConfiguration.registerModule("sub-pages"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",views:{"":{templateUrl:"modules/core/views/home.client.view.html"},"content-inner@home":{templateUrl:"modules/core/views/static-views/home-content.client.view.html",controller:["$scope","$stateParams",function($scope,$stateParams){$scope.pageName=$stateParams.page}]},"header-inner@home":{templateUrl:"modules/core/views/static-views/home-header.client.view.html",controller:["$scope","$stateParams",function($scope,$stateParams){$scope.pageName=$stateParams.page}]}}}).state("home.page",{url:":page",views:{"content-inner":{templateUrl:"modules/core/views/static-views/content.client.view.html",controller:["$scope","$stateParams","PageName",function($scope,$stateParams,PageName){$scope.pageName=$stateParams.page,$scope.displayPageName=PageName.page($scope.pageName),$scope.staticPage="modules/core/views/static-views/"+$stateParams.page+"-content.client.view.html"}]},"header-inner":{templateUrl:"modules/core/views/static-views/header.client.view.html",controller:["$scope","$stateParams","PageName",function($scope,$stateParams,PageName){$scope.pageName=$stateParams.page,$scope.displayPageName=PageName.page($scope.pageName),$scope.staticPage="modules/core/views/static-views/"+$stateParams.page+"-header.client.view.html"}]}}}).state("home.subpage",{url:":page/:subpage",views:{"content-inner":{templateUrl:function(){},controller:["$scope","$stateParams","PageName",function($scope,$stateParams,PageName){$scope.pageName=$stateParams.page,$scope.displayPageName=PageName.page($scope.pageName),$scope.staticPage="modules/core/views/static-views/"+$stateParams.page+"-content."+$stateParams.subpage+".client.view.html"}]},"header-inner":{templateUrl:"modules/core/views/static-views/header.client.view.html",controller:["$scope","$stateParams","PageName",function($scope,$stateParams,PageName){$scope.pageName=$stateParams.page,$scope.displayPageName=PageName.page($scope.pageName),$scope.staticPage="modules/core/views/static-views/"+$stateParams.page+"-header."+$stateParams.subpage+".client.view.html"}]}}})}]),angular.module("core").controller("CoreController",["$scope","$rootScope",function($scope,$rootScope){$rootScope.layoutState="default"}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("shuffleLetters",[function(){return{link:function($scope,iElm){function randomChar(type){var pool="";"lowerLetter"==type?pool="abcdefghijklmnopqrstuvwxyz0123456789":"upperLetter"==type?pool="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789":"symbol"==type&&(pool="1234567890");var arr=pool.split("");return arr[Math.floor(Math.random()*arr.length)]}var str=iElm.text(),options={step:40,fps:25,text:"",callback:function(){}};str=str.split("");for(var types=[],letters=[],i=0;i<str.length;i++){var ch=str[i];" "!=ch?(types[i]=/[a-z]/.test(ch)?"lowerLetter":/[A-Z]/.test(ch)?"upperLetter":"symbol",letters.push(i)):types[i]="space"}iElm.html(""),function shuffle(start){var i,len=letters.length,strCopy=str.slice(0);if(!(start>len)){for(i=Math.max(start,0);len>i;i++)strCopy[letters[i]]=i<start+options.step?randomChar(types[letters[i]]):"";iElm.text(strCopy.join("")),setTimeout(function(){shuffle(start+1)},1e3/options.fps)}}(-options.step)}}}]),angular.module("core").service("Menus",[function(){var banners={pages:{biz:"/modules/core/img/banners/construction-2.jpg",insaat:"/modules/core/img/banners/construction-2.jpg"}};return{page:function(pageName){return"undefined"==typeof banners.pages[pageName]?null:void 0},subPage:function(pageName,subPageName){return"undefined"==typeof banners.pages[pageName+"/"+subPageName]?null:banners.pages[pageName+"/"+subPageName]}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").service("PageName",[function(){var displayPageName={pages:{biz:"Biz",insaat:"İnşaat",tasarim:"Tasarım & Mimari",restorasyon:"Restorasyon & Rekreasyon",altyapi:"Altyapı",izolasyon:"İzolasyon",iletisim:"İletişim"}};return{page:function(pageName){return"undefined"==typeof displayPageName.pages[pageName]?null:displayPageName.pages[pageName]},subPage:function(pageName,subPageName){return"undefined"==typeof displayPageName.pages[pageName+"/"+subPageName]?null:displayPageName.pages[pageName+"/"+subPageName]}}}]),angular.module("lupus-widgets").directive("lupusSlideMaster",["$q","$interval","$timeout","$window",function($q,$interval,$timeout,$window){return{transclude:!0,replace:!0,template:"<div class=\"lupus-slide-master\">			<div class=\"lupus-slide-master-main-wrapper\" data-ng-class=\"{'loading':loading, 'slideChange': slideChange}\" data-ng-style=\"{'width':totalWidth + 'px','transform':'translate3d(-' + currentTranslate + 'px, 0, 0)'}\">				<div lupus-slide-master-slide-wrapper data-ng-repeat=\"image in images\" data-ng-if=\"!image.error\"></div>			</div>		</div>",link:function($scope,element){var waitForResize,slider=null,eachOneCallback=function(resolve){resolve.image.width=resolve.imgElm[0].getBoundingClientRect().width},eachOneErrCallback=function(resolve){$scope.images.slice(resolve.index,1)},setFrameWidth=function(){$scope.frameWidth=element[0].getBoundingClientRect().width},slowSlide=function(){$scope.currentTranslate=$scope.images[$scope.currentSlide].slideSlowTranslate},nextSlide=function(){$scope.currentSlide=($scope.currentSlide+1)%$scope.images.length,$scope.slideChange=!0,$timeout(function(){$scope.currentTranslate=$scope.images[$scope.currentSlide].mainWrapperTranslateStart,$timeout(function(){$scope.slideChange=!1,$timeout(function(){slowSlide()},1100)},1e3)},1e3)},initSlider=function(){slider&&$interval.cancel(slider),$scope.currentTranslate=0,$scope.currentSlide=0;var prevTranslate=0;setFrameWidth(),angular.forEach($scope.images,function(image){image.error||($scope.totalWidth=$scope.totalWidth+image.width,image.mainWrapperTranslateStart=prevTranslate,image.slideSlowTranslate=prevTranslate+image.width-$scope.frameWidth,prevTranslate+=image.width)}),$scope.loading=!1,slowSlide(),slider=$interval(function(){nextSlide()},9e3)};$scope.stop=function(){$interval.cancel(slider),$scope.currentTranslate=0,$scope.currentSlide=0},$scope.loadPromises=[],$scope.loading=!0,$scope.totalWidth=0,angular.forEach($scope.images,function(image){image.defered=$q.defer(),$scope.loadPromises.push(image.defered.promise.then(eachOneCallback).catch(eachOneErrCallback))}),$q.all($scope.loadPromises).finally(function(){initSlider()}),$window.addEventListener("resize",function(){waitForResize&&$timeout.cancel(waitForResize),waitForResize=$timeout(function(){$scope.stop(),initSlider()},3e3)})}}}]).directive("lupusSlideMasterSlideWrapper",[function(){return{template:'		<div class="lupus-slide-master-slide-wrapper" >			<img lupus-slide-master-image >		</div>',replace:!0,transclude:!0,link:function(){}}}]).directive("lupusSlideMasterImage",[function(){return{template:'<img data-ng-src="{{image.src}}" alt="" class="img-vertical-responsive ">',replace:!0,transclude:!0,link:function($scope,iElm){iElm.on("load",function(){$scope.image.loaded=!0,$scope.$parent.$digest(),console.log("LOADED",$scope.image),$scope.image.defered.resolve({imgElm:iElm,image:$scope.image})}).on("error",function(){$scope.image.error=!0,$scope.image.defered.reject({imgElm:iElm,index:$scope.$index}),console.warn("Image could not found.",$scope.image)})}}}]),angular.module("pages").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Pages","pages"),Menus.addMenuItem("topbar","New Page","pages/create")}]),angular.module("pages").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPages",{url:"/pages",templateUrl:"modules/pages/views/list-pages.client.view.html"}).state("createPage",{url:"/pages/create",templateUrl:"modules/pages/views/create-page.client.view.html"}).state("viewPage",{url:"/pages/:pageId",templateUrl:"modules/pages/views/view-page.client.view.html"}).state("editPage",{url:"/pages/:pageId/edit",templateUrl:"modules/pages/views/edit-page.client.view.html"})}]),angular.module("pages").controller("PagesController",["$scope","$stateParams","$location","Authentication","Pages",function($scope,$stateParams,$location,Authentication,Pages){$scope.authentication=Authentication,$scope.create=function(){var page=new Pages({name:this.name});page.$save(function(response){$location.path("pages/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(page){if(page){page.$remove();for(var i in $scope.pages)$scope.pages[i]===page&&$scope.pages.splice(i,1)}else $scope.page.$remove(function(){$location.path("pages")})},$scope.update=function(){var page=$scope.page;page.$update(function(){$location.path("pages/"+page._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pages=Pages.query()},$scope.findOne=function(){$scope.page=Pages.get({pageId:$stateParams.pageId})}}]),angular.module("pages").factory("Pages",["$resource",function($resource){return $resource("pages/:pageId",{pageId:"@_id"},{update:{method:"PUT"}})}]),angular.module("sub-pages").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Sub pages","sub-pages"),Menus.addMenuItem("topbar","New Sub page","sub-pages/create")}]),angular.module("sub-pages").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSubPages",{url:"/sub-pages",templateUrl:"modules/sub-pages/views/list-sub-pages.client.view.html"}).state("createSubPage",{url:"/sub-pages/create",templateUrl:"modules/sub-pages/views/create-sub-page.client.view.html"}).state("viewSubPage",{url:"/sub-pages/:subPageId",templateUrl:"modules/sub-pages/views/view-sub-page.client.view.html"}).state("editSubPage",{url:"/sub-pages/:subPageId/edit",templateUrl:"modules/sub-pages/views/edit-sub-page.client.view.html"})}]),angular.module("sub-pages").controller("SubPagesController",["$scope","$stateParams","$location","Authentication","SubPages",function($scope,$stateParams,$location,Authentication,SubPages){$scope.authentication=Authentication,$scope.create=function(){var subPage=new SubPages({name:this.name});subPage.$save(function(response){$location.path("sub-pages/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(subPage){if(subPage){subPage.$remove();for(var i in $scope.subPages)$scope.subPages[i]===subPage&&$scope.subPages.splice(i,1)}else $scope.subPage.$remove(function(){$location.path("sub-pages")})},$scope.update=function(){var subPage=$scope.subPage;subPage.$update(function(){$location.path("sub-pages/"+subPage._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.subPages=SubPages.query()},$scope.findOne=function(){$scope.subPage=SubPages.get({subPageId:$stateParams.subPageId})}}]),angular.module("sub-pages").factory("SubPages",["$resource",function($resource){return $resource("sub-pages/:subPageId",{subPageId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function(){}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);